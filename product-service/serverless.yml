service: product-service

frameworkVersion: '3'

plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "*"
  environment:
    SQS_URL:
      Ref: SQSQueue
    SNS_URL:
      Ref: SNSTopic
resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: products-sqs-queue
        VisibilityTimeout: 100
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
    SNSSubcription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: PUT_YOU_EMAIL@gmail.com
        Protocol: email
        TopicArn:
          Ref: SNSTopic
functions:
  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - SQSQueue
              - Arn
          batchSize: 5
    iamRoleStatements:
      - Effect: "Allow"        
        Action:
          - sqs:*        
        Resource:
          Fn::GetAtt:
              - SQSQueue
              - Arn
      - Effect: "Allow"        
        Action:
          - sns:*        
        Resource:
          Ref: SNSTopic
    iamRoleStatementsInherit: true
  getProductsList:
    handler: handler.getProductsList
    events:
      - http:
          path: products
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
  getProductById:
    handler: handler.getProductById
    events:
      - http:
          path: products/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token 
  createProduct:
    handler: handler.createProduct
    events:
      - http:
          path: products
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token

 